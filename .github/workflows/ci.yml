name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install root dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint:eslint
        continue-on-error: false
      
      - name: Run HTMLHint
        run: npm run lint:html
        continue-on-error: false

  typecheck:
    name: Type Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd 03-apps/02-application/kiosk-agent && npm ci
          cd ../cloud-api && npm ci
      
      - name: TypeScript Check (kiosk-agent)
        run: cd 03-apps/02-application/kiosk-agent && npx tsc --noEmit
      
      - name: TypeScript Check (cloud-api)
        run: cd 03-apps/02-application/cloud-api && npm run typecheck:strict

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: [lint, typecheck]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd 03-apps/02-application/kiosk-agent && npm ci
          cd ../cloud-api && npm ci
      
      - name: Run tests (kiosk-agent)
        run: cd 03-apps/02-application/kiosk-agent && npm test
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL || '' }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY || '' }}
      
      - name: Run tests (cloud-api)
        run: cd 03-apps/02-application/cloud-api && npm test
      
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            03-apps/02-application/kiosk-agent/coverage
            03-apps/02-application/cloud-api/coverage
          if-no-files-found: ignore

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: [test]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          cd 03-apps/02-application/kiosk-agent && npm ci
          cd ../cloud-api && npm ci
      
      - name: Build kiosk-agent
        run: cd 03-apps/02-application/kiosk-agent && npm run build
      
      - name: Build cloud-api
        run: cd 03-apps/02-application/cloud-api && npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-node${{ matrix.node-version }}
          path: |
            03-apps/02-application/kiosk-agent/dist
            03-apps/02-application/cloud-api/dist
          retention-days: 7

  build-docker-cloud-api:
    name: Build Docker Image (Cloud API)
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: cloud-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
      
      - name: Build Docker image (no push)
        uses: docker/build-push-action@v5
        with:
          context: ./03-apps/02-application/cloud-api
          file: ./03-apps/02-application/cloud-api/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/cloud-api-image.tar
      
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloud-api-docker-image
          path: /tmp/cloud-api-image.tar
          retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd 03-apps/02-application/cloud-api && npm ci
          cd ../kiosk-agent && npm ci
      
      - name: Run npm audit (cloud-api)
        run: cd 03-apps/02-application/cloud-api && npm audit --production --audit-level=high
        continue-on-error: true
      
      - name: Run npm audit (kiosk-agent)
        run: cd 03-apps/02-application/kiosk-agent && npm audit --production --audit-level=high
        continue-on-error: true
      
      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test, build, build-docker-cloud-api, security-scan]
    if: always()
    
    steps:
      - name: Check results
        run: |
          echo "## CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Lint: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Type Check: ${{ needs.typecheck.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Test: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Docker Build: ${{ needs.build-docker-cloud-api.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security Scan: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
