/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Green API
 * –ó–∞–ø—É—Å–∫: node test-send.js
 */

import { GreenApiClient, ReportSender } from './src/index.js';
import 'dotenv/config';

async function testBasicMessage() {
  console.log('üß™ –¢–µ—Å—Ç 1: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');

  const client = new GreenApiClient({
    idInstance: process.env.GREEN_API_INSTANCE_ID || '1105335604',
    apiTokenInstance: process.env.GREEN_API_TOKEN || ''
  });

  const result = await client.sendMessage({
    chatId: process.env.GREEN_API_RECIPIENT_PHONE || '79963153818@c.us',
    message: 'ü§ñ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –∫–∏–æ—Å–∫–∞\n\n–í—Ä–µ–º—è: ' + new Date().toLocaleString('ru-RU')
  });

  if (result.success) {
    console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìù –û—Ç–≤–µ—Ç:', result.data);
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', result.error);
  }

  return result.success;
}

async function testDiagnosticReport() {
  console.log('\nüß™ –¢–µ—Å—Ç 2: –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á—ë—Ç–∞...');

  const sender = new ReportSender({
    idInstance: process.env.GREEN_API_INSTANCE_ID || '1105335604',
    apiTokenInstance: process.env.GREEN_API_TOKEN || ''
  });

  const report = {
    timestamp: new Date().toISOString(),
    vehicleId: 'TEST-001',
    vin: '1HGBH41JXMN109186',
    diagnosticCodes: ['P0420', 'P0171'],
    sensors: {
      '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è': '92¬∞C',
      '–û–±–æ—Ä–æ—Ç—ã': '850 RPM',
      '–°–∫–æ—Ä–æ—Å—Ç—å': '0 –∫–º/—á',
      '–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ê–ö–ë': '12.6V'
    },
    summary: '–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç: –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∫–∞—Ç–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∏ —Ç–æ–ø–ª–∏–≤–Ω–æ–π —Å–º–µ—Å–∏'
  };

  const result = await sender.sendDiagnosticReport(report, {
    recipientPhone: process.env.GREEN_API_RECIPIENT_PHONE || '79963153818@c.us',
    includeDetails: true,
    sendAsFile: false
  });

  if (result.success) {
    console.log('‚úÖ –û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞:', result.error);
  }

  return result.success;
}

async function testGetSettings() {
  console.log('\nüß™ –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–Ω—Å—Ç–∞–Ω—Å–∞...');

  const client = new GreenApiClient({
    idInstance: process.env.GREEN_API_INSTANCE_ID || '1105335604',
    apiTokenInstance: process.env.GREEN_API_TOKEN || ''
  });

  const result = await client.getSettings();

  if (result.success) {
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã:');
    console.log('üì± WhatsApp ID:', result.data?.wid);
    console.log('üåç –°—Ç—Ä–∞–Ω–∞:', result.data?.countryInstance || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞');
    console.log('‚è±Ô∏è  –ó–∞–¥–µ—Ä–∂–∫–∞:', result.data?.delaySendMessagesMilliseconds, '–º—Å');
  } else {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:', result.error);
  }

  return result.success;
}

async function runAllTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Green API\n');
  console.log('Instance ID:', process.env.GREEN_API_INSTANCE_ID || '–ù–ï –£–ö–ê–ó–ê–ù');
  console.log('–ü–æ–ª—É—á–∞—Ç–µ–ª—å:', process.env.GREEN_API_RECIPIENT_PHONE || '–ù–ï –£–ö–ê–ó–ê–ù');
  console.log('Token:', process.env.GREEN_API_TOKEN ? '–ù–ê–°–¢–†–û–ï–ù ‚úÖ' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù ‚ùå');
  console.log('‚îÄ'.repeat(50));

  const test1 = await testBasicMessage();
  await new Promise(resolve => setTimeout(resolve, 1000));

  const test2 = await testDiagnosticReport();
  await new Promise(resolve => setTimeout(resolve, 1000));

  const test3 = await testGetSettings();

  console.log('\n' + '‚îÄ'.repeat(50));
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log(`–¢–µ—Å—Ç 1 (–°–æ–æ–±—â–µ–Ω–∏–µ): ${test1 ? '‚úÖ PASS' : '‚ùå FAIL'}`);
  console.log(`–¢–µ—Å—Ç 2 (–û—Ç—á—ë—Ç): ${test2 ? '‚úÖ PASS' : '‚ùå FAIL'}`);
  console.log(`–¢–µ—Å—Ç 3 (–ù–∞—Å—Ç—Ä–æ–π–∫–∏): ${test3 ? '‚úÖ PASS' : '‚ùå FAIL'}`);

  const allPassed = test1 && test2 && test3;
  console.log('\n' + (allPassed ? '‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!' : '‚ùå –ï–°–¢–¨ –û–®–ò–ë–ö–ò'));

  if (!allPassed) {
    console.log('\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log('1. –ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ .env');
    console.log('2. –ü–æ–¥–∫–ª—é—á—ë–Ω –ª–∏ WhatsApp –≤ –∫–æ–Ω—Å–æ–ª–∏ Green API');
    console.log('3. –ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ (79XXXXXXXXX@c.us)');
  }
}

runAllTests().catch(console.error);
