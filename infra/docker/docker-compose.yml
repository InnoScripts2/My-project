version: '3.8'

services:
  # Kiosk Agent
  kiosk-agent:
    build:
      context: ../..
      dockerfile: infra/docker/Dockerfile
    container_name: kiosk-agent
    restart: unless-stopped
    ports:
      - "7070:7070"
    environment:
      NODE_ENV: production
      AGENT_ENV: PROD
      AGENT_PORT: 7070
      DATABASE_URL: /app/data/kiosk.db
      LOG_LEVEL: info
    volumes:
      - kiosk-data:/app/data
      - kiosk-logs:/app/logs
    networks:
      - kiosk-network
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:7070/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: kiosk-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts/rules.yml:/etc/prometheus/rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - kiosk-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Alertmanager for alert routing
  alertmanager:
    image: prom/alertmanager:latest
    container_name: kiosk-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - kiosk-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: kiosk-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-changeme}
      GF_INSTALL_PLUGINS: ""
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - kiosk-network
    depends_on:
      - prometheus

  # Nginx reverse proxy with HTTPS
  nginx:
    image: nginx:alpine
    container_name: kiosk-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - kiosk-network
    depends_on:
      - kiosk-agent
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  kiosk-data:
    driver: local
  kiosk-logs:
    driver: local
  prometheus-data:
    driver: local
  alertmanager-data:
    driver: local
  grafana-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  kiosk-network:
    driver: bridge
